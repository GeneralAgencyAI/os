ARG PLATFORM
ENV PLATFORM=$PLATFORM

ARG VERSIONS
ENV VERSIONS=$VERSIONS

ARG OLED
ENV OLED=$OLED

ARG FAN
ENV FAN=$FAN

RUN echo $PLATFORM $VERSIONS

# Configure pacman for better network resilience
RUN sed -i '/^\[options\]/a XferCommand = /usr/bin/curl --connect-timeout 60 --max-time 300 --retry 3 --retry-delay 3 -L -C - -f -o %o %u' /etc/pacman.conf

# Install official packages from files.pikvm.org
RUN pacman --noconfirm --ask=4 -Syu \
	&& pacman --noconfirm --ask=4 -S pikvm-os-raspberrypi \
	&& (mv /boot/config.txt.pacsave /boot/config.txt || true) \
	&& (mv /boot/cmdline.txt.pacsave /boot/cmdline.txt || true) \
	&& rm -rf /var/cache/pacman/pkg/* /boot/*.pacnew

# Install locally-built kvmd packages FIRST (before dependencies pull official versions)
COPY stages/pikvm/local-kvmd /tmp/local-kvmd
RUN echo "==> Installing locally-built kvmd packages" \
	&& if ls /tmp/local-kvmd/kvmd-[0-9]*.pkg.tar.xz 1> /dev/null 2>&1; then \
		echo "==> Found local kvmd packages:" \
		&& ls -lh /tmp/local-kvmd/ \
		&& echo "==> Installing base kvmd and platform package for $PLATFORM-$BOARD" \
		&& pacman -U --noconfirm --ask=4 --overwrite '*' /tmp/local-kvmd/kvmd-[0-9]*.pkg.tar.xz /tmp/local-kvmd/kvmd-platform-$PLATFORM-$BOARD-[0-9]*.pkg.tar.xz \
		&& echo "==> Successfully installed local kvmd packages:" \
		&& pacman -Q kvmd kvmd-platform-$PLATFORM-$BOARD \
		&& rm -rf /tmp/local-kvmd \
	; else \
		echo "ERROR: No local kvmd package found!" \
		&& echo "Local build is required but packages are missing." \
		&& exit 1 \
	; fi

# Prevent pacman from upgrading our locally-built kvmd packages
RUN sed -i '/^\[options\]/a IgnorePkg = kvmd kvmd-platform-*' /etc/pacman.conf

# Install other pikvm packages and dependencies (kvmd is already installed above)
# Note: wiringpi-pikvm is already installed as a dependency of kvmd-fan
# Note: vi needs to be removed before installing vi-vim-symlink
RUN pacman --noconfirm --ask=4 -R vi || true
RUN pkg-install --assume-installed tessdata \
		kvmd-webterm \
		kvmd-fan \
		tesseract \
		tesseract-data-eng \
		pastebinit \
		tmate \
		vi-vim-symlink \
		nano-syntax-highlighting \
		avahi \
		hostapd \
	&& if [[ $PLATFORM =~ ^v4.*$ ]]; then pkg-install flashrom-pikvm; fi

ENV PART_OPTS=nodev,nosuid,noexec,ro,errors=remount-ro
RUN echo "LABEL=PIPST  /var/lib/kvmd/pst  ext4  $PART_OPTS,X-kvmd.pst-user=kvmd-pst  0 2" >> /etc/fstab
RUN systemctl enable kvmd-bootconfig \
	&& systemctl enable kvmd \
	&& systemctl enable kvmd-pst \
	&& systemctl enable kvmd-nginx \
	&& systemctl enable kvmd-webterm \
	&& if [[ $PLATFORM =~ ^.*-hdmi$ ]]; then systemctl enable kvmd-tc358743; fi \
	&& if [[ $PLATFORM =~ ^v0.*$ ]]; then systemctl mask serial-getty@ttyAMA0.service; fi \
	&& if [[ $PLATFORM =~ ^v[234].*$ ]]; then \
		systemctl enable kvmd-otg \
		&& echo "LABEL=PIMSD  /var/lib/kvmd/msd  ext4  $PART_OPTS,X-kvmd.otgmsd-user=kvmd  0 2" >> /etc/fstab \
	; fi \
	&& if [[ $BOARD =~ ^rpi4|zero2w$ && $PLATFORM =~ ^v[234].*-hdmi$ ]]; then systemctl enable kvmd-janus kvmd-media; fi \
	&& if [[ $BOARD =~ ^rpi3$ && $PLATFORM =~ ^v[1].*-hdmi$ ]]; then systemctl enable kvmd-janus kvmd-media; fi \
	&& if [[ $PLATFORM =~ ^v[34].*$ ]]; then systemctl enable kvmd-watchdog; fi \
	&& if [[ -n "$OLED" || $PLATFORM =~ ^v4.*$ ]]; then systemctl enable kvmd-oled kvmd-oled-reboot kvmd-oled-shutdown; fi \
	&& if [[ -n "$FAN" || $PLATFORM == v4plus-hdmi ]]; then systemctl enable kvmd-fan; fi

COPY stages/pikvm/nanorc /etc/skel/.nanorc
RUN cp -a /etc/skel/.nanorc /root \
	&& cp -a /etc/skel/.nanorc /home/kvmd-webterm \
	&& chown kvmd-webterm:kvmd-webterm /home/kvmd-webterm/.nanorc

COPY stages/pikvm/motd /etc/
COPY stages/pikvm/issue /etc/

# Copy development environment setup script
COPY stages/pikvm/setup-dev-env.sh /root/setup-dev-env.sh
RUN chmod 755 /root/setup-dev-env.sh

# Copy git configuration
COPY stages/pikvm/.gitconfig /root/.gitconfig
RUN chmod 644 /root/.gitconfig

# Copy SSH keys if .ssh-copy folder exists
COPY stages/pikvm/.ssh-copy /tmp/.ssh-copy
RUN if [ "$(ls -A /tmp/.ssh-copy 2>/dev/null)" ]; then \
		echo "==> Installing SSH keys from .ssh-copy" \
		&& mkdir -p /root/.ssh \
		&& cp -a /tmp/.ssh-copy/* /root/.ssh/ \
		&& chmod 700 /root/.ssh \
		&& chmod 600 /root/.ssh/* 2>/dev/null || true \
		&& chmod 644 /root/.ssh/*.pub 2>/dev/null || true \
		&& echo "==> SSH keys installed successfully" \
	; else \
		echo "==> No SSH keys found in .ssh-copy, skipping SSH key installation" \
	; fi \
	&& rm -rf /tmp/.ssh-copy

RUN sed -i -f /usr/share/kvmd/configs.default/os/cmdline/$PLATFORM-$BOARD.sed /boot/cmdline.txt \
	&& cp /usr/share/kvmd/configs.default/os/boot-config/$PLATFORM-$BOARD.txt /boot/config.txt

ARG ROOT_PASSWD
ENV ROOT_PASSWD=$ROOT_PASSWD
RUN echo "root:$ROOT_PASSWD" | chpasswd \
	&& echo "PermitRootLogin yes" >> /etc/ssh/sshd_config \
	&& userdel -r -f alarm

ARG WEBUI_ADMIN_PASSWD
ENV WEBUI_ADMIN_PASSWD=$WEBUI_ADMIN_PASSWD
RUN echo "$WEBUI_ADMIN_PASSWD" | kvmd-htpasswd set --read-stdin admin

ARG IPMI_ADMIN_PASSWD
ENV IPMI_ADMIN_PASSWD=$IPMI_ADMIN_PASSWD
RUN sed -i "\$d" /etc/kvmd/ipmipasswd \
	&& echo "admin:$IPMI_ADMIN_PASSWD -> admin:$WEBUI_ADMIN_PASSWD" >> /etc/kvmd/ipmipasswd

RUN rm -f /etc/ssh/ssh_host_*_key* /etc/kvmd/nginx/ssl/* /etc/kvmd/vnc/ssl/*

RUN echo "FIRST_BOOT=1" > /boot/pikvm.txt
